#!/bin/sh
#
# To run:
# -L: allow redirect
# -s: silent
# sh <(curl -sL https://driohq.net/dropbox/install_nix)
# sh <(curl -sL http://192.168.8.35:8080/install_nix)

{ # Prevent execution if this script was only partially downloaded

oops() {
  echo "$0:" "$@" >&2
  exit 1
}

# 666 - 022 = 644
umask 0022

tmpDir="$(mktemp -d -t nix-drio-install.XXXXXXXXXX || 
  oops "Can't create temporary directory")"

cleanup() {
    rm -rf "$tmpDir"
}
trap cleanup EXIT INT QUIT TERM

require_util() {
  command -v "$1" > /dev/null 2>&1 || 
    oops "you do not have '$1' installed, which I need to $2"
}

# Process args
# WARNING: order matters
#
withts=""
if [ "${1:-}" = "--withts" ]; then
    if [ -z "${2:-}" ]; then
        oops "missing argument for --withts"
    fi
    withts=${2}
    shift 2
fi

startServices=""  
if [ "${1:-}" = "--startServices" ]; then
  startServices="yes"  
fi

onlyts=""  
if [ "${1:-}" = "--onlyts" ]; then
  onlyts="yes"  
fi


require_util tar "unpack the binary tarball"
echo "tar found"
if [ "$(uname -s)" != "Darwin" ]; then
    require_util xz "unpack the binary tarball"
    echo "xz found"
fi

require_util git "git not found"
echo "git found"

if command -v curl > /dev/null 2>&1; then
    fetch() { curl --fail -L "$1" -o "$2"; }
elif command -v wget > /dev/null 2>&1; then
    fetch() { wget "$1" -O "$2"; }
else
    oops "you don't have wget or curl installed"
fi

curl -L https://nixos.org/nix/install > $tmpDir/install
chmod 755 /$tmpDir/install
cd $tmpDir
./install
NIX_SHELL=`find /nix -name nix-shell`

cd
[ -d dotfiles ] && rm -rf dotfiles
git clone https://github.com/drio/dotfiles.git

[ ! -d dotfiles/.config ] && ln -s dotfiles/.config 
ls .tmux.conf 2>/dev/null
if [ $? -gt 0 ]
then
  TMUX=`$NIX_SHELL --run 'which tmux' dotfiles/nix/shell.nix`
  cat dotfiles/.tmux.conf | sed -s "s|\/usr\/local\/bin\/tmux|$TMUX|" > ./.tmux.conf 
fi
rm -rf .local/share/nvim

[ ! -f ~/.bashrc ] && touch ~/.bashrc
if [ $(grep "NIX drio" ~/.bashrc | wc -l ) -eq 0 ];then
  echo "# NIX drio BEGIN" >> ~/.bashrc
  cat dotfiles/nix/ps1.txt >> ~/.bashrc
  echo "# NIX drio END" >> ~/.bashrc
fi

cd dotfiles/nix
$NIX_SHELL --run "neofetch"

# Install Tailscale
if [ ".$withts" != "." ];then
  curl -fsSL https://tailscale.com/install.sh | sh
  echo "starting tailscale with: $withts"
  sudo tailscale up $withts
fi

# Start services
if [ ".$startServices" != "." ];then 
  find ./services -type f -name "start" -exec chmod 755 {} \;
  find ./services -type f -name "stop" -exec chmod 755 {} \;
  $NIX_SHELL --run "cd; cd dotfiles/nix/services; ./start"
fi

# Only allow traffic on the tailscale interface
if [ ".$onlyts" != "." ];then 
  ifexists=$(ip address | grep tailscale0 | wc -l)
  if [ ".$ifexists" -gt 0 ];then
    echo "setting up only access on tailscale0"
    sudo ufw allow in on tailscale0
    sudo ufw enable
    sudo ufw default deny incoming
    sudo ufw default allow outgoing
    sudo ufw reload
    sudo service ssh restart
  else
    echo "No tailscale network interface found so I won't do --onlyts"
  fi
fi

echo "Done âœ¨"

}
