local module = {}

local icon = {}

icon.ampOn = [[ASCII:
.....1a..........AC..........E
..............................
......4.......................
1..........aA..........CE.....
e.2......4.3...........h......
..............................
..............................
.......................h......
e.2......6.3.........t...q....
5..........c.........s........
......6.......................
.........................q....
.....5c..............s...t....
]]

icon.ampOff = [[ASCII:
.....1a.....x....AC.y.......zE
..............................
......4.......................
1..........aA..........CE.....
e.2......4.3...........h......
..............................
..............................
.......................h......
e.2......6.3.........t...q....
5..........c.........s........
......6.......................
.........................q....
...x.5c....y.......z.s...t....
]]

--[[
local function setIcon(state)
  module.menu:setIcon(state and icon.ampOn or icon.ampOff)
end

module.menu = hs.menubar.new()
module.menu:setClickCallback(function() setIcon(hs.caffeinate.toggle("displayIdle")) end)
setIcon(hs.caffeinate.get("displayIdle"))
--]]

spoon.ModalMgr:new("mcaffeinate")
local cmodal = spoon.ModalMgr.modal_list["mcaffeinate"]

cmodal:bind('', 'd', '_D_isplay Lock', function()
  local o = hs.caffeinate.toggle("displayIdle")
  spoon.ModalMgr:deactivate({"mcaffeinate"})
  if o then
    hs.alert.show("ðŸ“º ðŸ”’", hs.screen.mainScreen(), {textSize = 100}, 1)
  else
    hs.alert.show("ðŸ“º ðŸ”“", hs.screen.mainScreen(), {textSize = 100}, 1)
  end
end)

cmodal:bind('', 'l', '_L_ock', function()
  spoon.ModalMgr:deactivate({"mcaffeinate"})
  hs.caffeinate.lockScreen()
end)

cmodal:bind('', 'e', 'sl_E_ep', function()
  spoon.ModalMgr:deactivate({"mcaffeinate"})
  hs.caffeinate.systemSleep()
end)


local caffeinate_keys = {"cmd", ";"}
spoon.ModalMgr.supervisor:bind(caffeinate_keys[1], caffeinate_keys[2],
  "Enter caffeinate Environment", function()
    spoon.ModalMgr:deactivateAll()
    spoon.ModalMgr:activate({"mcaffeinate"}, "#FF8247", false)
end)

--return module
return {}
